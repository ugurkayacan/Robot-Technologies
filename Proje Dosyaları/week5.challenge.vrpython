{"mode":"Text","textContent":"# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       VEX\n#\tCreated:\n#\tDescription:  VEXcode VR Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vexcode import *\nbrain.clear()\ndef getLineBrightness(*LineList):\n    global Csum,avg,Linebrg\n    avg=0\n    Csum=0\n    \n    for Linebrg in LineList:\n        Csum+=float(Linebrg)\n        wait(5, MSEC)\n    length=len(LineList)\n    avg=Csum/length\n    brain.print(f\"average brightness is {avg} for {length} lines\")\n    \n# Add project code in \"main\"\ndef main():\n\n    global control,i,Turn_Control\n    i=0\n    Turn_Control=1\n    \n    \n   \n    monitor_sensor(\"left_bumper.pressed\")\n    \n    drivetrain.drive(FORWARD)\n    colors=[]\n    \n    while i<=4:\n       \n        while not left_bumper.pressed() :\n            control=1\n            while down_eye.brightness(PERCENT)<100: \n                if control!=0:\n                    colors.append(down_eye.brightness(PERCENT))\n                    control=0\n\n                    pass\n                wait(5, MSEC)\n               \n            wait(5, MSEC)\n        if left_bumper.pressed() and i==4:\n            break\n            pass\n        if Turn_Control==1:\n            \n            drivetrain.turn_for(RIGHT, 90, DEGREES)\n            drivetrain.drive_for(FORWARD, 400, MM)\n            drivetrain.turn_for(RIGHT,90,DEGREES)\n            drivetrain.drive(FORWARD)\n            Turn_Control=0\n           \n        \n            pass\n        else:\n            \n            drivetrain.turn_for(LEFT, 90, DEGREES)\n            drivetrain.drive_for(FORWARD, 400, MM)\n            drivetrain.turn_for(LEFT,90,DEGREES)\n            drivetrain.drive(FORWARD)\n            Turn_Control=1\n            \n                \n            pass \n           \n        i=i+1    \n        wait(5, MSEC)\n    getLineBrightness(*colors)\n    brain.new_line()\n    brain.print(colors)\n   \n    drivetrain.stop()\n    stop_project()\n\n\n\n    \n\n# VR threads â€” Do not delete\nvr_thread(main())\n","textLanguage":"python","rconfig":[],"slot":0,"platform":"PG","sdkVersion":"20210708.10.00.00","appVersion":"2.1.1","fileFormat":"1.0.0","icon":"","playground":"LineDetector","target":"Physical"}